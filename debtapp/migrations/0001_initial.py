# Generated by Django 5.2.5 on 2025-08-07 15:58

import debtapp.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('mobile', models.CharField(max_length=10, unique=True, validators=[django.core.validators.RegexValidator(message='Phone number must be 10 digits long numbers.', regex='^\\d{10}$')])),
                ('address', models.TextField(max_length=200)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to=debtapp.models.user_profile_pic, validators=[debtapp.models.validate_file_extension, debtapp.models.validate_file_size, debtapp.models.validate_file_content])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Debtor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('debtor_id', models.CharField(editable=False, max_length=10, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('address', models.TextField(max_length=200)),
                ('mobile', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message='Phone number must be 10 digits long numbers.', regex='^\\d{10}$')])),
                ('total_debt', models.DecimalField(decimal_places=2, default=0.0, max_digits=12, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('initial_debt', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('debt_date', models.DateField()),
                ('debt_purpose', models.CharField(max_length=100)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('mobile_banking', 'Mobile Banking'), ('esewa', 'eSewa'), ('khalti', 'Khalti'), ('ime', 'IME'), ('connectips', 'ConnectIPS'), ('fonepay', 'FonePay')], default='cash', max_length=20)),
                ('voucher_cheque_no', models.CharField(blank=True, max_length=30)),
                ('debt_voucher', models.FileField(blank=True, null=True, upload_to='debt_vouchers/', validators=[debtapp.models.validate_file_extension, debtapp.models.validate_file_size, debtapp.models.validate_file_content])),
                ('is_delete', models.BooleanField(default=False)),
                ('delete_date', models.DateTimeField(blank=True, null=True)),
                ('debtor_status', models.CharField(choices=[('active', 'Active'), ('recovered', 'Recovered')], default='active', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='debtors', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Debtor',
                'verbose_name_plural': 'Debtors',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tran_id', models.CharField(editable=False, max_length=10, unique=True)),
                ('tran_type', models.CharField(choices=[('debit', 'Debit'), ('credit', 'Credit')], max_length=10)),
                ('tran_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('current_debt', models.DecimalField(decimal_places=2, max_digits=12)),
                ('tran_desc', models.TextField(max_length=200)),
                ('tran_medium', models.CharField(choices=[('cash', 'Cash'), ('mobile_banking', 'Mobile Banking'), ('esewa', 'eSewa'), ('khalti', 'Khalti'), ('ime', 'IME'), ('connectips', 'ConnectIPS'), ('fonepay', 'FonePay')], default='cash', max_length=20)),
                ('tran_voucher', models.FileField(blank=True, null=True, upload_to='tran_vouchers/', validators=[debtapp.models.validate_file_extension, debtapp.models.validate_file_size, debtapp.models.validate_file_content])),
                ('tran_date', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('debtor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='debtapp.debtor')),
                ('recorded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
                'ordering': ['-tran_date'],
            },
        ),
    ]
